---
import Layout from "../../layouts/Layout.astro";
import {type Episode, episodePath, optimiseEpisodeTitle} from "../../model/Episode";
import {marked} from 'marked';
import Person from "../../components/Person.astro";

export async function getStaticPaths() {
  const hygraph_endpoint = await import.meta.env.HYGRAPH_ENDPOINT;
  const response = await fetch(
    hygraph_endpoint,
    {
      method: "POST",
      headers: {"Content-Type": "application/json", Accept: "application/json"},
      body: JSON.stringify({
        query: `
query AllEpisodes($size: Int, $stage: Stage!) {
  episodes(first: $size, orderBy: airedAt_DESC, stage: $stage) {
    topics {
      name
    }
    show {
      id
      name
      color
    }
    summary
    name
    code
    airedAt
    host { ...PersonF }
    cohosts { ...PersonF }
    guests { ... PersonF }
    multimediaProducers { ...PersonF }
    consultants { ...PersonF }
    designers { ...PersonF }
    anchorUrl
    applePodcastsUrl
    castboxUrl
    youTubeUrl
    spotifyUrl
  }
}
fragment PersonF on Person {
    fullName
    avatar { url(transformation: { image: { resize: { fit: crop, height: 200, width: 200 } } }) }
            }
        `, variables: {size: 300, stage: 'PUBLISHED'}
      }),
    }
  );

  const data = await response.json();
  const {episodes} = data.data;
  return episodes.map((episode: Episode) => ({
    params: {
      code: episodePath(episode)
    },
    props: {
      episode: {
        ...episode, ...{
          name: optimiseEpisodeTitle(episode)
        }
      }
    }
  }))
}

const renderSummary = (episode: any) => marked.parse(episode.summary, {
  mangle: false,
  headerIds: false,
})

const {episode} = Astro.props;
---
<Layout title="Epizoda">
  <h1>
    <span class="code">{episode.code}</span>
    <span class="name">{episode.name}</span>
  </h1>

  <div class="people">
    {episode.guests.map(guest =>
      <Person person={guest}/>
    )}
    <Person person={episode.host}></Person>
    {episode.cohosts.map(guest =>
      <Person person={guest}/>
    )}
  </div>
  <div class="summary" set:html={renderSummary(episode)}></div>
  <div class="meta">
    Izid:
    <div class="m aired-at">{episode.airedAt}</div>
  </div>
</Layout>
<style lang="scss" is:global>
  .people {
    .person {
      position: relative;
      display: inline-block;
      margin-right: 30px;

      &:last-child {
        margin-right: 0;
      }
    }
  }

  .meta {
    color: #333;

    .m {
      display: inline;
      padding-right: 10px;
    }
  }

  .code {
    font-weight: 100;
  }
</style>
