---
import Layout from "../layouts/Layout.astro";
import EventRow from "../components/EventRow.astro";
import {EventsService} from "../services/EventsService";
import type {Event} from "../services/goo/Events.ts";
import {
  dateFromRaw,
  weekRangeFromMonday,
  weekRangeToHuman,
} from "../utils/DateTimeUtils";

const gooEndpoint = EventsService.gooEndpoint;

const now = new Date();
const timeline = await EventsService.timeline(gooEndpoint)
  .then(events => events.filter(
    event => event.localEndDateTime ? event.localEndDateTime > now : event.localStartDateTime > now
  ))

function groupByWeek(events: Event[]): Record<string, Event[]> {
  const getMonday = (date: Date): Date => {
    const monday = new Date(date);
    const day = monday.getDay();
    const diff = (day === 0 ? -6 : 1) - day; // Adjusting for Monday start (1=Monday, 0=Sunday)
    monday.setDate(monday.getDate() + diff);
    monday.setHours(0, 0, 0, 0); // Reset time to midnight for consistency
    return monday;
  };

  return events.reduce((weeks, event) => {
    const startDate = event.localStartDateTime;
    const monday = getMonday(startDate).toISOString().split('T')[0];

    if (!weeks[monday]) weeks[monday] = [];
    weeks[monday].push(event);

    return weeks;
  }, {} as Record<string, Event[]>);
}

function groupByDay(events: Event[]) {
  return events.reduce((days, event) => {
    const eventDate = event.localStartDateTime.toLocaleDateString('sl-SI', {
      weekday: 'long'
    }).replace(/^\w/, c => c.toUpperCase());

    if (!days[eventDate]) days[eventDate] = [];
    days[eventDate].push(event);
    return days;
  }, {} as Record<string, Event[]>);
}

const groupedEvents =
  Object.entries(groupByWeek(timeline)).map(([week, events]) => {
    return {
      week,
      groupedEvents: Object.entries(groupByDay(events))
    }
  })
---
<Layout title="Dogodki in Konference" hideFooter={"false"}>
  <h1>Dogodki in Konference</h1>

  <div class="events-per-week">
    {groupedEvents && groupedEvents.map(({week, groupedEvents}) => {
      return (
        <div class="week">
          <h4 class="week-header">Teden / {weekRangeToHuman(weekRangeFromMonday(dateFromRaw(week)))}</h4>
          <div class="days">
            {groupedEvents.map(([day, events]) =>
              (
                <div class="day-line">
                  <div class="day">{day}</div>
                  <div class="events">
                    {events.map(event => (
                      <EventRow day={day} event={event}></EventRow>))
                    }
                  </div>
                </div>
              )
            )}
          </div>
        </div>
      )
    })}
  </div>

  <p class="disclaimer">⚠️ Sistem za zbiranje dogodkov in konferenc je v razvoju. Prosimo preverite točnost podatkov na
    strani organizatorjev. Ogrodje NI organizator. Dogodki in podatki o konferencah so zbrani iz javnih virov.
    Napake, želje in PR-je sprejemamo na <a href="https://github.com/ogrodje/goo">github.com/ogrodje/goo.</a>
    Podatki o dogodkih so na voljo tudi v <a href="https://goo.ogrodje.si/docs/openapi">strojni obliki via API</a>.
    Podatki se osvežijo vsakih 12 ur.</p>

</Layout>
<style lang="scss">
  @use "sass:color";
  @use "../variables";

  $day-cell-width: 120px;

  @mixin super-line {
    line-height: variables.$main-line-height * 1.3;
  }

  .events-per-week {
    .week {
      .week-header {
        font-weight: 300;
      }

      .days {
        position: relative;

        .day-line {
          position: relative;

          .day {
            @include super-line;
            position: absolute;
            display: block;
            width: $day-cell-width;
            padding-right: 10px;
            color: #6a676c;

            @media only screen and (max-width: 1000px) {
              position: relative;
              width: 100%;
            }
          }

          .events {
            padding-left: $day-cell-width;
            line-height: variables.$main-line-height * 1.1;
            margin-bottom: 20px;

            @media only screen and (max-width: 1000px) {
              padding: 3px;
            }
          }
        }
      }
    }
  }

  .disclaimer {
    display: block;
    margin-top: 100px;
    color: #666;
    padding: 5px;
    font-style: italic;
  }
</style>
